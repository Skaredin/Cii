#include "strokaZadanie6_3.h"
#include <iostream>
#include <cstring> // для strlen, strcmp, strcpy
#include <locale> // Для поддержки русского языка

int main() {
    setlocale(LC_ALL, "Russian"); // Устанавливаем локализацию для русского языка

    // Оформление вывода (зелёный цвет ФИО и группы)
    std::cout << "\033[32mСкаредин А.В. РИЗ-230916у\033[0m" << std::endl;

    // Инициализация строк
    Stroka2 s1("qwerty"), s2("1234567890"), s3, s4(s1), s5;

    // Вывод начальных значений строк
    std::cout << "Начальное значение s1= \033[32m" << s1.dlina() << "\033[0m, s2= \033[32m" << s2.dlina() << "\033[0m" << std::endl;

    // Вывод длины строк
    std::cout << "Длина s1 (\033[32mstrlen\033[0m): \033[32m" << s1.dlina() << "\033[0m" << std::endl;
    std::cout << "Длина s2 (\033[32mwhile\033[0m): \033[32m" << s2.dlina() << "\033[0m" << std::endl;

    std::cout << std::endl;

    // Сравнение строк
    s1.sravn(s1.getStr(), s2.getStr()); // Используем метод getStr для доступа к строке

    // Копирование s2 в s1
    
    std::cout << "Результат копирования: \033[32ms1= " << s1.getStr() << ", s2= " << s2.getStr() << "\033[0m" << std::endl;

    // Длина строк после копирования
    std::cout << "Длина s1 после копирования: \033[32m" << s1.dlina() << "\033[0m" << std::endl;
    std::cout << "Длина s2 после копирования: \033[32m" << s2.dlina() << "\033[0m" << std::endl;

    // Сравнение строк после копирования
    std::cout << "\033[32m";  // Устанавливаем зелёный цвет
    s1.sravn(s1.getStr(), s2.getStr()); // Сравнение строк
    std::cout << "\033[0m";   // Сбрасываем цвет

    std::cout << std::endl;

    // Присваивание s1 новой строки
    
    std::cout << "Результат сравнения: \033[32ms1= " << s1.getStr() << ", s2= " << s2.getStr() << "\033[0m" << std::endl;

    // Длина строк после присваивания
    std::cout << "Длина s1 после присваивания: \033[32m" << s1.dlina() << "\033[0m" << std::endl;
    std::cout << "Длина s2 после присваивания: \033[32m" << s2.dlina() << "\033[0m" << std::endl;

    std::cout << std::endl;

    // Сравнение строк после восстановления s1
    s1.sravn(s1.getStr(), s2.getStr());

    // Сцепление s1 и s2
    s5 = s1 + s2; // Оператор сложения
    std::cout << "Результат сцепления: \033[32ms5= " << s5.getStr() << ", s1= " << s1.getStr() << ", s2= " << s2.getStr() << "\033[0m" << std::endl;

    // Длина строк после сцепления
    std::cout << "Длина s1 после сцепления: \033[32m" << s1.dlina() << "\033[0m" << std::endl;
    std::cout << "Длина s2 после сцепления: \033[32m" << s2.dlina() << "\033[0m" << std::endl;

    return 0;
}
