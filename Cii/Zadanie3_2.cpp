#include <iostream>   // Для использования стандартных потоков ввода/вывода
#include <cstdlib>    // Для использования функции swap() (меняет местами элементы)
#include <locale>// Библеотека русского языка !
using namespace std;

// Функция пузырьковой сортировки
void bubbleSort(int mas[], int n) {
    for (int i = 0; i < n - 1; i++) {  // Внешний цикл для прохода по массиву
        for (int j = 0; j < n - 1 - i; j++) {  // Внутренний цикл для сравнений соседних элементов
            if (mas[j] > mas[j + 1]) {  // Если текущий элемент больше следующего
                // Обмен значениями
                int t = mas[j];       // Сохраняем текущий элемент во временной переменной
                mas[j] = mas[j + 1];  // Меняем местами элементы
                mas[j + 1] = t;       // Меняем местами элементы
            }
        }
    }
}

// Функция быстрой сортировки
void quickSort(int mas[], int low, int high) {
    if (low < high) {  // Если есть хотя бы два элемента для сортировки
        int pivot = mas[high];  // Опорный элемент - последний элемент массива
        int i = low - 1;  // Индекс для меньших элементов

        for (int j = low; j < high; j++) {  // Перебираем элементы массива
            if (mas[j] < pivot) {  // Если текущий элемент меньше опорного
                i++;  // Увеличиваем индекс для меньших элементов
                swap(mas[i], mas[j]);  // Меняем местами
            }
        }

        swap(mas[i + 1], mas[high]);  // Перемещаем опорный элемент на его правильную позицию
        int pi = i + 1;  // Позиция опорного элемента

        // Рекурсивно сортируем элементы до и после опорного
        quickSort(mas, low, pi - 1);
        quickSort(mas, pi + 1, high);
    }
}

// Функция для вывода массива
void printArray(int mas[], int n) {
    for (int i = 0; i < n; i++) {  // Проходим по всему массиву
        cout << mas[i] << " ";  // Выводим элементы массива
    }
    cout << endl;  // Переход на новую строку
}

int main7() {
    setlocale(LC_ALL, "Russian"); // Устанавливаем русскую локаль для поддержки кириллицы в консоли
    std::cout << "\033[32mСкаредин А.В. РИЗ-230916у\033[0m" << std::endl; // Зелёный цвет ФИО ГРуппа
    // Исходный массив для сортировки
    int mas[] = { 2, 5, -8, 1, -4, 6, 3, -5, -9, 13, 0, 4, 9 };
    int n = sizeof(mas) / sizeof(int);  // Определяем количество элементов в массиве

    // Выбор метода сортировки:
    cout << "Используем пузырьковую сортировку:" << endl;
    bubbleSort(mas, n);  // Вызываем функцию пузырьковой сортировки
    printArray(mas, n);   // Выводим отсортированный массив

    // Перезапуск массива для быстрой сортировки
    int mas2[] = { 2, 5, -8, 1, -4, 6, 3, -5, -9, 13, 0, 4, 9 };
    cout << "Используем быструю сортировку:" << endl;
    quickSort(mas2, 0, n - 1);  // Вызываем функцию быстрой сортировки
    printArray(mas2, n);  // Выводим отсортированный массив

    return 0;  // Возвращаем 0 для завершения программы
}


//Пузырьковая сортировка и быстрая сортировка могут быть адаптированы для работы с многомерными массивами,например, с массивами типа int mas[rows][cols]. 
// Однако нужно учитывать, что сортировка многомерного массива будет работать либо по строкам, либо по столбцам (в зависимости от задачи).