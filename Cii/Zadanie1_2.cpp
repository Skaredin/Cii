#define PR(x) printf("x=%u, *x=%d, &x=%u\n", (unsigned int)x, *x, (unsigned int)&x) 
// Макрос PR(x) выводит:
// - Адрес указателя x
// - Значение, на которое он указывает (*x)
// - Адрес самой переменной x (что здесь не совсем корректно, так как x — указатель)

#include <stdio.h> 
#include <locale> // Подключение библиотеки для поддержки русской локализации
#include <iostream>

void main2(void)
{
    setlocale(LC_ALL, "Russian"); // Устанавливаем русскую локаль для корректного отображения кириллицы в консоли
    std::cout << "\033[32mСкаредин А.В. РИЗ-230916у\033[0m" << std::endl; // Зелёный цвет ФИО ГРуппа
    int mas[] = { 100, 200, 300 }; // Создаем массив из трех элементов
    int* ptr1, * ptr2; // Объявляем два указателя на int

    ptr1 = mas;      // Указатель ptr1 указывает на первый элемент массива (mas[0])
    ptr2 = &mas[2];  // Указатель ptr2 указывает на третий элемент массива (mas[2])

    PR(ptr1); // Выводим информацию о ptr1 (адрес, значение по адресу, адрес самого указателя)

    ptr1++; // Сдвигаем ptr1 на следующий элемент массива (теперь он указывает на mas[1])
    PR(ptr1); // Выводим информацию о ptr1 после сдвига

    PR(ptr2); // Выводим информацию о ptr2 (адрес, значение по адресу, адрес самого указателя)

    ++ptr2; // Сдвигаем ptr2 на следующий элемент (за пределы массива!)

    printf("ptr2 - ptr1 = %u\n", (unsigned int)(ptr2 - ptr1));
    // Вычисляем разницу между указателями ptr2 и ptr1 (количество элементов между ними)
}
